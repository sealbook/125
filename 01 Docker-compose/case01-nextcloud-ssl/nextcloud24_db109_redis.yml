 version: '3'
  ## 官方原型 注意空格
 services:
   nc-db:
     image: mariadb:10.9.3
     container_name: nc-db
     restart: always
     command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW --sort_buffer_size=512M
     environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=ncdb
      - MYSQL_USER=nextcloud
      - MYSQL_PASSWORD=nextcloud
     volumes:
      - /zvol/nas/db:/var/lib/mysql
      - /etc/localtime:/etc/localtime:ro
     restart: always
     networks:
      - nextcloud_net

   nc-app:
     image: nextcloud:24.0.6-apache
     container_name: nc-app
     restart: always
     ports:
      - "9680:80"
#      - "9980:443"
     volumes:
      - /zvol/nas/www:/var/www/html
      - /zvol/nas/config:/var/www/html/config
      - /zvol/nas/data:/var/www/html/data
      - /zvol/nas/app:/var/www/html/custom_apps
      - /zvol/nas/theme:/var/www/html/themes/mycustom
      - /etc/localtime:/etc/localtime:ro
     restart: always
     networks:
      - nextcloud_net
     environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=ncdb
      - MYSQL_USER=nextcloud
      - MYSQL_PASSWORD=nextcloud
     ## IP for docker mariadb 
     depends_on: # services name
      - nc-db
      - nc-redis

   nc-redis:
     container_name: nc-redis
     image: redis:7.0.5
     restart: always
     networks:
      - nextcloud_net
     ports:
      - "6379:6379"
     volumes:
      - /zvol/nas/cache:/data
      - /zvol/nas/redis.conf:/usr/local/etc/redis/redis.conf
     command: /usr/local/etc/redis/redis.conf 

 networks: # create networks first
   nextcloud_net:

## docker network create lab_net
#### docker-compose -f nc25.yaml up -d <by administrator>
## mariadb info   nextcloud/nextcloud/ncdb/nc-db 
## <docker db ip || 最好是 db hostname | 重啟ip 會變動>
## 2022.08.22 labbing 測試 nc23與改善 內網上傳慢 <小容量|多檔>
## after nc22 api改版連結app OXoffice 無後續對應step| abandon 
## 各個 app 版本適配，穩定更新版本
### 要先 touch redis.conf <chown librenms:root redis.conf>
daemonize no
timeout 0
requirepass 123456
bind 0.0.0.0
port 6379
appendonly yes
dir /data
## docker 內部path
############# nano config.php <注意順序 #locking?>
## 指向 docker <nc-redis> hostname    ## nc25後，另有 redis.php，不需修正???
'memcache.distributed' => '\OC\Memcache\Redis',  // 分佈式緩存使用Redis
'redis' => array('host' => 'nc-redis','port' => 6379,'password' => '123456',),
'memcache.locking' => '\OC\Memcache\Redis',   // 啟用Redis緩存的文件鎖
'trashbin_retention_obligation' => 'auto,3',  // 超過3天自動清理

## 解除 block 大小限制
docker exec --user www-data nc-app php /var/www/html/occ config:app:set files max_chunk_size --value 0
## SVG
docker exec -it nc-app /bin/bash -c 'apt update && apt install -y libmagickcore-6.q16-6-extra'
##  <背景check 模式> crontab -e
*/5 * * * * 
docker exec --user www-data -t nc-app php -f  /var/www/html/cron.php
## 手動同步掃描文件  crontab -e
0 23 * * * 
docker exec --user www-data nc-app php /var/www/html/occ files:scan --all
## app/multimedia/Preview Generator

*/5 * * * *  sh /zvol/nas/bg_check.sh
0 23 * * *   sh /zvol/nas/fileScan.sh

## config.php

  'trusted_domains' =>
  array (
    0 => '192.168.10.122:9680',
    1 => 'nextcloud.infowize.com.tw',
    2 => '*',
  ),
'trusted_proxies' => ['npm-app'],
'overwrite.cli.url' => 'https://nextcloud.infowize.com.tw',
'overwriteprotocol' => 'https',
